// ==============================================================
// File generated on Thu Dec 17 22:11:26 +0100 2020
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
// SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
// IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __MLP_BiasesHidden2_H__
#define __MLP_BiasesHidden2_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct MLP_BiasesHidden2_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(MLP_BiasesHidden2_ram) {
        ram[0] = "0b10111101101110011000101111101101";
        ram[1] = "0b10111101110110011110001001100111";
        ram[2] = "0b00111101001001000001101011001011";
        ram[3] = "0b10111101010111000010110101000110";
        ram[4] = "0b10111101011000110011111111110101";
        ram[5] = "0b00111101100010001000001001110110";
        ram[6] = "0b00111100110011111101110011010001";
        ram[7] = "0b10111100001001100111111101001101";
        ram[8] = "0b00111100001101101000011010100111";
        ram[9] = "0b10111101101000111110000101000010";
        ram[10] = "0b10111100111010111111010000110011";
        ram[11] = "0b00111101011111001110100011011100";
        ram[12] = "0b10111101010111111010111110110110";
        ram[13] = "0b00111101100001011100011010101001";
        ram[14] = "0b10111101100000111100010101000101";
        ram[15] = "0b10111100100100011000000011110001";
        ram[16] = "0b10111101110111011010111100011010";
        ram[17] = "0b00111101101101111011100111101101";
        ram[18] = "0b00111100111110011100001001111011";
        ram[19] = "0b10111100100110001011110010010010";
        ram[20] = "0b00111101110000001101111101100000";
        ram[21] = "0b00111101110011101001001110001101";
        ram[22] = "0b10111100100001100101111101011100";
        ram[23] = "0b00111101110000110000110110010011";
        ram[24] = "0b00111100011111100001011001001011";
        ram[25] = "0b10111100000111011111010000100001";
        ram[26] = "0b10111100100100001110011110110111";
        ram[27] = "0b00111011111100101000011100100110";
        ram[28] = "0b10111101100011010011111010010100";
        ram[29] = "0b00111100110000001110011010000100";
        ram[30] = "0b10111101101011101001101100110110";
        ram[31] = "0b00111100001011110010011011111011";
        ram[32] = "0b10111100101110001001010001010101";
        ram[33] = "0b00111101000110010100001011111010";
        ram[34] = "0b00111101011100111110101100110000";
        ram[35] = "0b10111110000101101111011111011110";
        ram[36] = "0b00111101001011000000110110101110";
        ram[37] = "0b00111011001111010110110100101000";
        ram[38] = "0b10111101101010001010100100111011";
        ram[39] = "0b00111101000110111011100110001110";
        ram[40] = "0b10111101100010001101011101010011";
        ram[41] = "0b00111100101001100101001111100010";
        ram[42] = "0b00111101011110000111000011111001";
        ram[43] = "0b10111101000100110000011100101110";
        ram[44] = "0b10111100100010011100010011101010";
        ram[45] = "0b10111101010101111000010111100001";
        ram[46] = "0b10111100100011110101010111001000";
        ram[47] = "0b00111101001110001100010100101001";
        ram[48] = "0b10111110000001000000001100100110";
        ram[49] = "0b10111101100010110110010100101110";
        ram[50] = "0b00111101111011100000101010100101";
        ram[51] = "0b10111101010111001001010010100110";
        ram[52] = "0b10111101111110001001000101101101";
        ram[53] = "0b10111101100000100110011011000000";
        ram[54] = "0b10111101111011101111100110101101";
        ram[55] = "0b10111101001001001101011101000011";
        ram[56] = "0b10111100111101110010100111110100";
        ram[57] = "0b00111101001000110000010101101101";
        ram[58] = "0b10111100111010110100000010011011";
        ram[59] = "0b00111101000101011101100000100010";
        ram[60] = "0b00111100110010000110101100100110";
        ram[61] = "0b10111110000000100100011110101001";
        ram[62] = "0b00111101100000111010001011000011";
        ram[63] = "0b00111101100100101111111101110100";
        ram[64] = "0b00111011100111100000011101100101";
        ram[65] = "0b10111100101111110011010101100001";
        ram[66] = "0b00111101100000111100001010000111";
        ram[67] = "0b10111100100101010111010001010100";
        ram[68] = "0b10111101110010110001111100010011";
        ram[69] = "0b10111101011010100011010110011110";
        ram[70] = "0b10111101100101110100100011001111";
        ram[71] = "0b00111101001000011110111000100111";
        ram[72] = "0b00111101110011010001111010000111";
        ram[73] = "0b00111100100010101000001110100110";
        ram[74] = "0b00111101100101011011011001001100";
        ram[75] = "0b10111101101011010100111011110101";
        ram[76] = "0b10111101011110110000010101011100";
        ram[77] = "0b10111101110001001011001010011111";
        ram[78] = "0b10111100110010011010100110110100";
        ram[79] = "0b10111101000111100001001100000110";
        ram[80] = "0b00111101010011111111110100110000";
        ram[81] = "0b00111100110100111001101110110000";
        ram[82] = "0b00111100111101011001100011010011";
        ram[83] = "0b00111101001010001001111000011001";
        ram[84] = "0b10111100100110111111000011101010";
        ram[85] = "0b10111101101101011010000101111101";
        ram[86] = "0b00111101010001010000000110000000";
        ram[87] = "0b10111101100101111001110101110000";
        ram[88] = "0b00111011111101001110100110011011";
        ram[89] = "0b00111101011000000111001110010111";
        ram[90] = "0b00111101100100110101100010011111";
        ram[91] = "0b00111101010110011101011100010111";
        ram[92] = "0b10111101111111010000110101000000";
        ram[93] = "0b00111101001111011000011100111000";
        ram[94] = "0b10111101111000111100110000101100";
        ram[95] = "0b00111101111100011001011010101010";
        ram[96] = "0b10111101010001010111100001011000";
        ram[97] = "0b00111110000001000110101100100110";
        ram[98] = "0b10111101100111110010011110101001";
        ram[99] = "0b10111110000011011111111000110111";
        ram[100] = "0b10111110001010000011001101010110";
        ram[101] = "0b10111011000100011110011010110110";
        ram[102] = "0b00111101110011011100101001110011";
        ram[103] = "0b10111100001101010110110100001000";
        ram[104] = "0b10111011101001100011110101111110";
        ram[105] = "0b00111101010000101101010010100101";
        ram[106] = "0b00111101110100111000100101111001";
        ram[107] = "0b00111011110100100010111000110100";
        ram[108] = "0b10111101101000100010001011100110";
        ram[109] = "0b10111101110010001100110001011100";
        ram[110] = "0b10111110000001111000100011000110";
        ram[111] = "0b10111101100101000110001011111010";
        ram[112] = "0b10111101101011110010011110011001";
        ram[113] = "0b10111101101010101100110110001001";
        ram[114] = "0b00111011000010001110101100010110";
        ram[115] = "0b00111101111101100011100011100000";
        ram[116] = "0b10111101001100101110101011111001";
        ram[117] = "0b10111101100001110110000110100011";
        ram[118] = "0b00111101110101011011101010000000";
        ram[119] = "0b10111100001011001011101101010101";
        ram[120] = "0b00111101001011011100010110000111";
        ram[121] = "0b00111101010100001010001110100010";
        ram[122] = "0b00111101011011111011110100101111";
        ram[123] = "0b10111101101100100111100100111101";
        ram[124] = "0b00111100110000001000110101100111";
        ram[125] = "0b10111100111111000100001011001011";
        ram[126] = "0b00111101100101111011001101110011";
        ram[127] = "0b10111100110101010110100000010100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(MLP_BiasesHidden2) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


MLP_BiasesHidden2_ram* meminst;


SC_CTOR(MLP_BiasesHidden2) {
meminst = new MLP_BiasesHidden2_ram("MLP_BiasesHidden2_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~MLP_BiasesHidden2() {
    delete meminst;
}


};//endmodule
#endif
